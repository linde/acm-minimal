# GENERATED CODE, DO NOT EDIT.
# Any changes should be made in the original files in the Policy Controller constraint library: 
#   third_party/src/pod-security-policy/allow-privilege-escalation/template.yaml
#   src.rego
apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: k8spspallowprivilegeescalationcontainer
spec:
  crd:
    spec:
      names:
        kind: K8sPSPAllowPrivilegeEscalationContainer
      validation:
        openAPIV3Schema:
          description: Controls restricting escalation to root privileges.
  targets:
  - rego: |
      package k8spspallowprivilegeescalationcontainer

      violation[{"msg": msg, "details": {}}] {
        c := input_containers[_]
        input_allow_privilege_escalation(c)
        msg := sprintf("Privilege escalation container is not allowed: %v", [c.name])
      }

      input_allow_privilege_escalation(c) {
        not has_field(c, "securityContext")
      }

      input_allow_privilege_escalation(c) {
        not c.securityContext.allowPrivilegeEscalation == false
      }

      input_containers[c] {
        c := input.review.object.spec.containers[_]
      }

      input_containers[c] {
        c := input.review.object.spec.initContainers[_]
      }

      # has_field returns whether an object has a field
      has_field(object, field) {
        object[field]
      }
    target: admission.k8s.gatekeeper.sh
