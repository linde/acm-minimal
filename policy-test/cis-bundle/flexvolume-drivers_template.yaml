# GENERATED CODE, DO NOT EDIT.
# Any changes should be made in the original files in the Policy Controller constraint library: 
#   third_party/src/pod-security-policy/flexvolume-drivers/template.yaml
#   src.rego
apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: k8spspflexvolumes
spec:
  crd:
    spec:
      names:
        kind: K8sPSPFlexVolumes
      validation:
        openAPIV3Schema:
          description: Controls allow list of Flexvolume drivers.
          properties:
            allowedFlexVolumes:
              items:
                properties:
                  driver:
                    type: string
                type: object
              type: array
  targets:
  - rego: |
      package k8spspflexvolumes

      violation[{"msg": msg, "details": {}}] {
        volume := input_flexvolumes[_]
        not input_flexvolumes_allowed(volume)
        msg := sprintf("FlexVolume %v is not allowed, pod: %v. Allowed drivers: %v", [volume, input.review.object.metadata.name, input.parameters.allowedFlexVolumes])
      }

      input_flexvolumes_allowed(volume) {
        # An empty list means there is no restriction on flexVolume drivers used
        input.parameters.allowedFlexVolumes == []
      }

      input_flexvolumes_allowed(volume) {
        input.parameters.allowedFlexVolumes[_].driver == volume.flexVolume.driver
      }

      input_flexvolumes[v] {
        v := input.review.object.spec.volumes[_]
        has_field(v, "flexVolume")
      }

      # has_field returns whether an object has a field
      has_field(object, field) {
        object[field]
      }
    target: admission.k8s.gatekeeper.sh
